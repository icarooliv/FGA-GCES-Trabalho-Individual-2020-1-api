name: API CI

on: 
  push:

jobs:
  tests:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          RAILS_ENV: test
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ci_db_test
        ports: ["5432:5432"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      
      - name: Ruby gem cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      
      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Setup test database
        env:
          RAILS_ENV: test
          DATABASE_HOST: localhost
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_NAME: ci_db_test
          RAILS_MAX_THREADS: 5
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          bin/rake db:test:prepare

      - name: Run tests
        run: | 
          bin/rails test
      - name: Upload coverage results    
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: coverage-report
          path: coverage
  build:     
    name: Build
    needs: [tests]
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.head_ref == 'main' }}
          tags: icarooliv/trab-individual-api:latest
          cache-from: type=registry,ref=icarooliv/trab-individual-api:latest
          cache-to: type=inline    
#   deploy:
#     needs: [tests, build]
#     if: '${{ github.head_ref == ''main'' }}'
#     runs-on: ubuntu-latest
#     steps:
#       - name: Update rancher deployment
#         uses: th0th/rancher-redeploy-workload@v0.82
#         env:
#           RANCHER_BEARER_TOKEN: '${{ secrets.RANCHER_BEARER_TOKEN }}'
#           RANCHER_CLUSTER_ID: '${{ secrets.RANCHER_CLUSTER_ID }}'
#           RANCHER_NAMESPACE: '${{ secrets.RANCHER_NAMESPACE }}'
#           RANCHER_PROJECT_ID: '${{ secrets.RANCHER_PROJECT_ID }}'
#           RANCHER_URL: '${{ secrets.RANCHER_URL }}'
#           RANCHER_WORKLOADS: '${{ secrets.RANCHER_WORKLOADS }}'
